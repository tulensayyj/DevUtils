@startuml

title __OKGO's Class Diagram__\n

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.HttpLoggingInterceptor {
          - UTF8 : Charset
          + intercept()
          - _finalPrintLog()
          - bodyEncoded()
          - isPlaintext()
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.HttpLoggingInterceptor.CaptureEntity {
          + requestBody : HashMap<String, String>
          + requestHeader : HashMap<String, String>
          + requestMethod : String
          + requestUrl : String
          + responseBody : String
          + responseHeader : HashMap<String, String>
          + responseStatus : HashMap<String, String>
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      abstract class dev.other.okgo.OkGoCallback {
          - TAG : String
          - toast : boolean
          - url : String
          + OkGoCallback()
          + OkGoCallback()
          + convertResponse()
          + downloadProgress()
          + onCacheSuccess()
          + onError()
          {abstract} + onErrorResponse()
          + onFinish()
          + onStart()
          + onSuccess()
          {abstract} + onSuccessResponse()
          + uploadProgress()
          - _response()
          - isSuccess()
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.OkGoDemo {
          {static} + getUserInfo()
          {static} + getUserList()
          {static} + uploadImage()
          {static} + uploadImages()
          {static} - demo()
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.OkGoDemo.UserBean {
          + age : int
          + userId : String
          + userName : String
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.OkGoResponse {
          {static} + KEY_CODE : String
          {static} + KEY_DATA : String
          {static} + KEY_MESSAGE : String
          + code : String
          + exception : Throwable
          + message : String
          + original : String
          + result : boolean
          + toast : boolean
          + OkGoResponse()
          + getDataString()
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.OkGoResponse.Builder {
          + code : String
          + exception : Throwable
          + message : String
          + original : String
          + result : boolean
          + toast : boolean
          + Builder()
          + Builder()
          + build()
          + setCode()
          + setData()
          + setException()
          + setMessage()
          + setOriginal()
          + setResult()
          + setToast()
      }
    }
  }
  

  namespace dev.other {
    namespace okgo {
      class dev.other.okgo.OkGoUtils {
          {static} + execute()
          {static} + execute()
          {static} + initOkGo()
          - OkGoUtils()
      }
    }
  }
  

  dev.other.okgo.HttpLoggingInterceptor .up.|> okhttp3.Interceptor
  dev.other.okgo.HttpLoggingInterceptor +-down- dev.other.okgo.HttpLoggingInterceptor.CaptureEntity
  dev.other.okgo.OkGoCallback -up-|> com.lzy.okgo.callback.AbsCallback
  dev.other.okgo.OkGoDemo +-down- dev.other.okgo.OkGoDemo.UserBean
  dev.other.okgo.OkGoResponse o-- T : data
  dev.other.okgo.OkGoResponse +-down- dev.other.okgo.OkGoResponse.Builder
  dev.other.okgo.OkGoResponse.Builder o-- T : data


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
