@startuml

title __VALIDATOR's Class Diagram__\n

  namespace dev.utils {
    namespace common {
      namespace validator {
        class dev.utils.common.validator.BankCheckUtils {
            {static} - BANK_BIN : String[]
            {static} - BANK_NAME : String[]
            {static} - TAG : String
            {static} + checkBankCard()
            {static} + getBankCardCheckCode()
            {static} + getNameOfBank()
            - BankCheckUtils()
        }
      }
    }
  }
  

  namespace dev.utils {
    namespace common {
      namespace validator {
        class dev.utils.common.validator.IDCardUtils {
            {static} + CHINA_ID_MAX_LENGTH : int
            {static} + CHINA_ID_MIN_LENGTH : int
            {static} - POWER : int[]
            {static} - TAG : String
            {static} - sCityCodeMaps : Map<String, String>
            {static} - sHKFirstCodeMaps : Map<String, Integer>
            {static} - sTWFirstCodeMaps : Map<String, Integer>
            {static} + convert15CardTo18()
            {static} + getAgeByIdCard()
            {static} + getBirthByIdCard()
            {static} + getBirthdayByIdCard()
            {static} + getCheckCode18()
            {static} + getDateByIdCard()
            {static} + getGenderByIdCard()
            {static} + getMonthByIdCard()
            {static} + getPowerSum()
            {static} + getProvinceByIdCard()
            {static} + getYearByIdCard()
            {static} + validateCard()
            {static} + validateHKCard()
            {static} + validateIdCard10()
            {static} + validateIdCard15()
            {static} + validateIdCard18()
            {static} + validateTWCard()
            - IDCardUtils()
            {static} - converCharToInt()
            {static} - isNumber()
            {static} - validateDateSmllerThenNow()
        }
      }
    }
  }
  

  namespace dev.utils {
    namespace common {
      namespace validator {
        class dev.utils.common.validator.ValiToPhoneUtils {
            {static} + CHAIN_PHONE_FORMAT_CHECK : String
            {static} + CHINA_MOBILE_PATTERN : String
            {static} + CHINA_PHONE_PATTERN : String
            {static} + CHINA_TELECOM_PATTERN : String
            {static} + CHINA_UNICOM_PATTERN : String
            {static} + HK_PHONE_PATTERN : String
            {static} + PHONE_CALL_PATTERN : String
            {static} + isPhone()
            {static} + isPhoneCallNum()
            {static} + isPhoneCheck()
            {static} + isPhoneToChinaMobile()
            {static} + isPhoneToChinaTelecom()
            {static} + isPhoneToChinaUnicom()
            {static} + isPhoneToHkMobile()
            - ValiToPhoneUtils()
        }
      }
    }
  }
  

  namespace dev.utils {
    namespace common {
      namespace validator {
        class dev.utils.common.validator.ValidatorUtils {
            {static} + REGEX_CHINESE : String
            {static} + REGEX_CHINESE_ALL : String
            {static} + REGEX_CHINESE_ALL2 : String
            {static} + REGEX_CONTAIN_NUMBER : String
            {static} + REGEX_EMAIL : String
            {static} + REGEX_IP_ADDR : String
            {static} + REGEX_LETTER : String
            {static} + REGEX_NICKNAME : String
            {static} + REGEX_NUMBER : String
            {static} + REGEX_NUMBER_OR_DECIMAL : String
            {static} + REGEX_NUMBER_OR_LETTER : String
            {static} + REGEX_PASSWORD : String
            {static} + REGEX_REALNAME : String
            {static} + REGEX_SPACE : String
            {static} + REGEX_SPECIAL : String
            {static} + REGEX_URL : String
            {static} + REGEX_USERNAME : String
            {static} + REGEX_WX : String
            {static} - TAG : String
            {static} + isChinese()
            {static} + isChineseAll()
            {static} + isContainChinese()
            {static} + isContainNumber()
            {static} + isEmail()
            {static} + isIPAddress()
            {static} + isLetter()
            {static} + isNickName()
            {static} + isNumber()
            {static} + isNumberDecimal()
            {static} + isNumberLetter()
            {static} + isPassword()
            {static} + isRealName()
            {static} + isSpec()
            {static} + isUrl()
            {static} + isUserName()
            {static} + isWx()
            {static} + match()
            - ValidatorUtils()
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
