@startuml

title __MULTISELECT's Class Diagram__\n

  namespace dev {
    namespace assist {
      namespace multiselect {
        interface dev.assist.multiselect.IBaseMultiSelect {
            {abstract} + clearSelects()
            {abstract} + getSelectSize()
            {abstract} + getSelects()
            {abstract} + isSelect()
            {abstract} + isSelectValue()
            {abstract} + putSelects()
            {abstract} + putSelects()
            {abstract} + unselectValue()
            {abstract} + unselectValueAll()
        }
      }
    }
  }
  

  namespace dev {
    namespace assist {
      namespace multiselect {
        interface dev.assist.multiselect.IMultiSelectToList {
            {abstract} + getSelectValue()
            {abstract} + getSelectValueToPosition()
            {abstract} + getSelectValues()
            {abstract} + getSelectValuesToReverse()
            {abstract} + isSelect()
            {abstract} + select()
            {abstract} + select()
            {abstract} + select()
            {abstract} + toggle()
            {abstract} + unselect()
            {abstract} + unselect()
        }
      }
    }
  }
  

  namespace dev {
    namespace assist {
      namespace multiselect {
        interface dev.assist.multiselect.IMultiSelectToMap {
            {abstract} + getSelectKey()
            {abstract} + getSelectKeys()
            {abstract} + getSelectKeysToReverse()
            {abstract} + getSelectValue()
            {abstract} + getSelectValues()
            {abstract} + getSelectValuesToReverse()
            {abstract} + isSelect()
            {abstract} + isSelectKey()
            {abstract} + select()
            {abstract} + select()
            {abstract} + toggle()
            {abstract} + unselect()
        }
      }
    }
  }
  

  namespace dev {
    namespace assist {
      namespace multiselect {
        class dev.assist.multiselect.MultiSelectListAssist {
            - mListSelects : List<V>
            + clearSelects()
            + getSelectSize()
            + getSelectValue()
            + getSelectValueToPosition()
            + getSelectValues()
            + getSelectValuesToReverse()
            + getSelects()
            + isSelect()
            + isSelect()
            + isSelectValue()
            + putSelects()
            + putSelects()
            + select()
            + select()
            + select()
            + toggle()
            + unselect()
            + unselect()
            + unselectValue()
            + unselectValueAll()
        }
      }
    }
  }
  

  namespace dev {
    namespace assist {
      namespace multiselect {
        class dev.assist.multiselect.MultiSelectMapAssist {
            - mMapSelects : LinkedHashMap<K, V>
            + clearSelects()
            + getSelectKey()
            + getSelectKeys()
            + getSelectKeysToReverse()
            + getSelectSize()
            + getSelectValue()
            + getSelectValues()
            + getSelectValuesToReverse()
            + getSelects()
            + isSelect()
            + isSelect()
            + isSelectKey()
            + isSelectValue()
            + putSelects()
            + putSelects()
            + select()
            + select()
            + toggle()
            + unselect()
            + unselectValue()
            + unselectValueAll()
        }
      }
    }
  }
  

  dev.assist.multiselect.MultiSelectListAssist .up.|> dev.assist.multiselect.IMultiSelectToList
  dev.assist.multiselect.MultiSelectMapAssist .up.|> dev.assist.multiselect.IMultiSelectToMap


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
