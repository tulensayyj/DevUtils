@startuml

title __DECODE's Class Diagram__\n

  namespace afkt.project {
    namespace util {
      namespace zxing {
        namespace decode {
          interface afkt.project.util.zxing.decode.DecodeConfig {
              {static} + BARCODE_BITMAP : String
              {abstract} + getCropRect()
              {abstract} + getHandler()
              {abstract} + getPreviewSize()
              {abstract} + isCropRect()
              {abstract} + isError()
              {abstract} + setError()
          }
        }
      }
    }
  }
  

  namespace afkt.project {
    namespace util {
      namespace zxing {
        namespace decode {
          class afkt.project.util.zxing.decode.DecodeFormat {
              {static} + ALL : int
              {static} + BARCODE : int
              {static} + QRCODE : int
              {static} - INDUSTRIAL_FORMATS : Set<BarcodeFormat>
              {static} - ONE_D_FORMATS : Set<BarcodeFormat>
              {static} - PRODUCT_FORMATS : Set<BarcodeFormat>
              {static} - QR_CODE_FORMATS : Set<BarcodeFormat>
              {static} + getBarCodeFormats()
              {static} + getQrCodeFormats()
              - DecodeFormat()
          }
        }
      }
    }
  }
  

  namespace afkt.project {
    namespace util {
      namespace zxing {
        namespace decode {
          interface afkt.project.util.zxing.decode.DecodeFormat.DecodeMode {
          }
        }
      }
    }
  }
  

  namespace afkt.project {
    namespace util {
      namespace zxing {
        namespace decode {
          class afkt.project.util.zxing.decode.DecodeHandler {
              - TAG : String
              - mMultiFormatReader : MultiFormatReader
              - mRunning : boolean
              + DecodeHandler()
              + buildLuminanceSource()
              + handleMessage()
              {static} - bundleThumbnail()
              - decode()
          }
        }
      }
    }
  }
  

  namespace afkt.project {
    namespace util {
      namespace zxing {
        namespace decode {
          interface afkt.project.util.zxing.decode.DecodeResult {
              {abstract} + handleDecode()
          }
        }
      }
    }
  }
  

  namespace afkt.project {
    namespace util {
      namespace zxing {
        namespace decode {
          class afkt.project.util.zxing.decode.DecodeThread {
              - mHandlerInitLatch : CountDownLatch
              - mHints : Map<DecodeHintType, Object>
              + DecodeThread()
              + getHandler()
              + run()
          }
        }
      }
    }
  }
  

  afkt.project.util.zxing.decode.DecodeFormat +-down- afkt.project.util.zxing.decode.DecodeFormat.DecodeMode
  afkt.project.util.zxing.decode.DecodeHandler -up-|> android.os.Handler
  afkt.project.util.zxing.decode.DecodeHandler o-- afkt.project.util.zxing.decode.DecodeConfig : mDecodeConfig
  afkt.project.util.zxing.decode.DecodeThread o-- afkt.project.util.zxing.decode.DecodeConfig : mDecodeConfig
  afkt.project.util.zxing.decode.DecodeThread o-- afkt.project.util.zxing.decode.DecodeHandler : mHandler


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
